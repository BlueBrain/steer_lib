This software is an implementation of the steering API for the
RealityGrid project, produced by the Supercomputing, Visualization &
e-Science Group, Manchester Computing, University of Manchester.  It
uses libxml, the XML parser created by the Gnome Project.

How to install:

The XML parser.

The steering library uses libxml, the XML C library for Gnome.  This is
available from http://xmlsoft.org/downloads.html and should be installed 
on your machine before attempting to install the steering library itself.

(Note, you'll need to set the CFLAGS environment variable to "-mabi=64" to
get a 64-bit library on an SGI.  Configure should also be run with the 
following flags:

--with-python=no
--with-threads=no
--with-xpath=no
--with-xptr=no

If you don't have the access rights to install the library in a system-default
location and don't want to have to set LD_LIBRARY64_PATH/LD_LIBRARYN32_PATH
then you can also specify that you only want a static library by giving the
--enable-shared=no flag.)

UNICORE (grid-services related) stuff.

In order to interface with the UNICORE framework, the steering library
launches a Java proxy that communicates with the UNICORE framework (if
available).  As a result, you will require GLUE from The Mind Electric
installed on your system as well as the ReG-grid-service software
(should be available from the same source as this library itself).

You should make the additions to your CLASSPATH environment variable
specified in the GLUE documentation.  The additions required for the
ReG-grid-service are dealt with in the reg_steer_configure.csh file -
you should edit these as appropriate.  More about this file below.

The steering library.

The directory containing this README file should also contain a file called
reg_steer_configure.csh.  This sets some environment variables
to configure the steering system:

REG_STEER_HOME: should be set to the path of the directory that contains
	        this file.

REG_STEER_DIRECTORY: set this to point to an existing directory that will
	             be used as a communication channel between the app.
	  	     and the steerer (i.e. all messages are written and
	  	     read from this directory).  This information will be
                     discarded if the UNICORE framework is being used.

REG_XML_LIBDIR: The root location of the xml library file (libxml2.a) to link
                against.  NOTE that the actual location is generated by 
	        concatenating either 32 or 64 to the supplied string (depending
                on the type of binary being generated). So, if I had a 64-bit
	        version of the library in directory "/home/me/xml_lib64" then
                I would set REG_XML_LIBDIR to "/home/me/xml_lib".

REG_XML_INCDIR: The path of the libxml 'include' directory.

Executing 'source reg_steer_configure.csh' (or equivalent, depending on which
shell you use) will then set these variables.  Since this needs to be done
everytime you log in, it may be wise to add this command to your .cshrc or
equivalent.

Edit the first two lines of the Makefile to be found in this directory in order
to select 64- or 32-bit compilation. (Ensure that you have a compatible libxml
library file.)

Edit 'src/Makefile' to set architecture type (necessary for generating
F90 bindings).

Type 'make' in the current directory...bear in mind that the makefiles etc.
are not currently platform independent and may require tweaking.

Included in the distribution are 'mini_steerer', 'mini_app',
'mini_app2' and 'mini_app_para' (an MPI version) which are _very_
simple applications designed to show how one might make an application
steerable and how one might write a steerer with which to control it.
'mini_steerer' in particular is really just to give an idea - its
functionality is truly primitive and often hard-wired. 'mini_app2' is
similar to 'mini_app' but implemented in F90 instead of C. 'mini_app_para'
is a parallel (F90 and MPI) example.

UNICORE ('Sheffield') demonstrator:

In order to produce a steering library suitable for use with the UNICORE
demonstrator, the line containing "#define UNICORE_DEMO" in 
'include/Reg_Steer_types.h' should be uncommented.

Any comments, enquiries or pleas for explanation should be sent to:

Andrew Porter                Andrew.Porter@man.ac.uk
SVE Group
Manchester Computing
University of Manchester








