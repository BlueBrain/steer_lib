/* soapStub.h
   Generated by gSOAP 2.7.13 from all_hdrs.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_epr
#define SOAP_TYPE_epr (10)
/* epr */
struct epr
{
	char *wsa__Address;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sws__GetParamLogResponse
#define SOAP_TYPE_sws__GetParamLogResponse (11)
/* sws:GetParamLogResponse */
struct sws__GetParamLogResponse
{
	char *LogValues;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sws__RecordCheckpointResponse
#define SOAP_TYPE_sws__RecordCheckpointResponse (12)
/* sws:RecordCheckpointResponse */
struct sws__RecordCheckpointResponse
{
	char *_RecordCheckpointReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_reg__Command
#define SOAP_TYPE_reg__Command (13)
/* reg:Command */
struct reg__Command
{
	int Cmd_USCOREid;	/* required element of type xsd:int */
	char *Cmd_USCOREname;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_reg__supp_cmds
#define SOAP_TYPE_reg__supp_cmds (14)
/* Sequence of reg:supp-cmds schema type: */
struct reg__supp_cmds
{
	struct reg__Command *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_reg__steerMessage
#define SOAP_TYPE_reg__steerMessage (16)
/* reg:steerMessage */
struct reg__steerMessage
{
	struct reg__supp_cmds Supported_USCOREcommands;	/* required element of type reg:supp-cmds */
};
#endif

#ifndef SOAP_TYPE_sws__AttachResponse
#define SOAP_TYPE_sws__AttachResponse (17)
/* sws:AttachResponse */
struct sws__AttachResponse
{
	struct reg__steerMessage ReG_USCOREsteer_USCOREmessage;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type reg:steerMessage */
};
#endif

#ifndef SOAP_TYPE_wsrp__DestroyResponse
#define SOAP_TYPE_wsrp__DestroyResponse (18)
/* wsrp:DestroyResponse */
struct wsrp__DestroyResponse
{
	void *_rubbish;	/* transient */
};
#endif

#ifndef SOAP_TYPE_sws__PutParamLogResponse
#define SOAP_TYPE_sws__PutParamLogResponse (21)
/* sws:PutParamLogResponse */
struct sws__PutParamLogResponse
{
	void *_rubbish;	/* transient */
};
#endif

#ifndef SOAP_TYPE_wsrp__ResourcePropertyStruct
#define SOAP_TYPE_wsrp__ResourcePropertyStruct (22)
/* wsrp:ResourcePropertyStruct */
struct wsrp__ResourcePropertyStruct
{
	char *ResourceProperty;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_wsrp__GetMultipleResourcePropertiesRequest
#define SOAP_TYPE_wsrp__GetMultipleResourcePropertiesRequest (23)
/* Sequence of wsrp:GetMultipleResourcePropertiesRequest schema type: */
struct wsrp__GetMultipleResourcePropertiesRequest
{
	struct wsrp__ResourcePropertyStruct *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_wsrp__SetResourcePropertiesResponse
#define SOAP_TYPE_wsrp__SetResourcePropertiesResponse (25)
/* wsrp:SetResourcePropertiesResponse */
struct wsrp__SetResourcePropertiesResponse
{
	void *rubbish;	/* transient */
};
#endif

#ifndef SOAP_TYPE_sws__AddChildRequest
#define SOAP_TYPE_sws__AddChildRequest (26)
/* sws:AddChildRequest */
struct sws__AddChildRequest
{
	char *epr;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sws__AddChildResponse
#define SOAP_TYPE_sws__AddChildResponse (27)
/* sws:AddChildResponse */
struct sws__AddChildResponse
{
	void *rubbish;	/* transient */
};
#endif

#ifndef SOAP_TYPE_sws__DetachResponse
#define SOAP_TYPE_sws__DetachResponse (28)
/* sws:DetachResponse */
struct sws__DetachResponse
{
	void *rubbish;	/* transient */
};
#endif

#ifndef SOAP_TYPE___wsrp__GetResourceProperty
#define SOAP_TYPE___wsrp__GetResourceProperty (31)
/* Operation wrapper: */
struct __wsrp__GetResourceProperty
{
	char *wsrp__GetResourceProperty;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_wsrp__GetMultipleResourceProperties
#define SOAP_TYPE_wsrp__GetMultipleResourceProperties (33)
/* wsrp:GetMultipleResourceProperties */
struct wsrp__GetMultipleResourceProperties
{
	struct wsrp__GetMultipleResourcePropertiesRequest in;	/* required element of type wsrp:GetMultipleResourcePropertiesRequest */
};
#endif

#ifndef SOAP_TYPE_wsrp__SetResourceProperties
#define SOAP_TYPE_wsrp__SetResourceProperties (36)
/* wsrp:SetResourceProperties */
struct wsrp__SetResourceProperties
{
	char *wsrp__Insert;	/* optional element of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_wsrp__GetResourcePropertyDocument
#define SOAP_TYPE_wsrp__GetResourcePropertyDocument (38)
/* wsrp:GetResourcePropertyDocument */
struct wsrp__GetResourcePropertyDocument
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_sws__AddChild
#define SOAP_TYPE_sws__AddChild (41)
/* sws:AddChild */
struct sws__AddChild
{
	struct sws__AddChildRequest __in;
};
#endif

#ifndef SOAP_TYPE_sws__Attach
#define SOAP_TYPE_sws__Attach (44)
/* sws:Attach */
struct sws__Attach
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_sws__Detach
#define SOAP_TYPE_sws__Detach (47)
/* sws:Detach */
struct sws__Detach
{
	void *_param_1;	/* transient */
};
#endif

#ifndef SOAP_TYPE_sws__RecordCheckpoint
#define SOAP_TYPE_sws__RecordCheckpoint (50)
/* sws:RecordCheckpoint */
struct sws__RecordCheckpoint
{
	char *in0;	/* optional element of type xsd:string */
	char *in1;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sws__GetParamLog
#define SOAP_TYPE_sws__GetParamLog (53)
/* sws:GetParamLog */
struct sws__GetParamLog
{
	int in0;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_sws__PutParamLog
#define SOAP_TYPE_sws__PutParamLog (56)
/* sws:PutParamLog */
struct sws__PutParamLog
{
	char *in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_wsrp__Destroy
#define SOAP_TYPE_wsrp__Destroy (59)
/* wsrp:Destroy */
struct wsrp__Destroy
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_swsf__createSWSResourceResponse
#define SOAP_TYPE_swsf__createSWSResourceResponse (60)
/* swsf:createSWSResourceResponse */
struct swsf__createSWSResourceResponse
{
	struct epr wsa__EndpointReference;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type epr */
};
#endif

#ifndef SOAP_TYPE_swsf__createSWSResource
#define SOAP_TYPE_swsf__createSWSResource (63)
/* swsf:createSWSResource */
struct swsf__createSWSResource
{
	int timeToLive;	/* required element of type xsd:int */
	char *chkpointEPR;	/* optional element of type xsd:string */
	char *passPhrase;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_rsg__AddResponse
#define SOAP_TYPE_rsg__AddResponse (64)
/* rsg:AddResponse */
struct rsg__AddResponse
{
	struct epr wsa__EndpointReference;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type epr */
};
#endif

#ifndef SOAP_TYPE_rsg__Add
#define SOAP_TYPE_rsg__Add (67)
/* rsg:Add */
struct rsg__Add
{
	char *_in;	/* optional element of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_cpt__findByHandleResponse
#define SOAP_TYPE_cpt__findByHandleResponse (68)
/* cpt:findByHandleResponse */
struct cpt__findByHandleResponse
{
	char *_findByHandleReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cpt__getActiveTreesResponse
#define SOAP_TYPE_cpt__getActiveTreesResponse (69)
/* cpt:getActiveTreesResponse */
struct cpt__getActiveTreesResponse
{
	char *_getActiveTreesReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cpt__createNewTreeResponse
#define SOAP_TYPE_cpt__createNewTreeResponse (70)
/* cpt:createNewTreeResponse */
struct cpt__createNewTreeResponse
{
	char *_createNewTreeReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cpt__destroyResponse
#define SOAP_TYPE_cpt__destroyResponse (71)
/* cpt:destroyResponse */
struct cpt__destroyResponse
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_cpt__createNewTree
#define SOAP_TYPE_cpt__createNewTree (74)
/* cpt:createNewTree */
struct cpt__createNewTree
{
	char *in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cpt__findByHandle
#define SOAP_TYPE_cpt__findByHandle (77)
/* cpt:findByHandle */
struct cpt__findByHandle
{
	char *in0;	/* optional element of type xsd:string */
	char *in1;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cpt__Destroy
#define SOAP_TYPE_cpt__Destroy (80)
/* cpt:Destroy */
struct cpt__Destroy
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_cpt__getActiveTrees
#define SOAP_TYPE_cpt__getActiveTrees (83)
/* cpt:getActiveTrees */
struct cpt__getActiveTrees
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_cptn__addNodeResponse
#define SOAP_TYPE_cptn__addNodeResponse (84)
/* cptn:addNodeResponse */
struct cptn__addNodeResponse
{
	char *_addNodeReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cptn__destroyResponse
#define SOAP_TYPE_cptn__destroyResponse (85)
/* cptn:destroyResponse */
struct cptn__destroyResponse
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_cptn__Destroy
#define SOAP_TYPE_cptn__Destroy (88)
/* cptn:Destroy */
struct cptn__Destroy
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_cptn__addNode
#define SOAP_TYPE_cptn__addNode (91)
/* cptn:addNode */
struct cptn__addNode
{
	char *in0;	/* optional element of type xsd:string */
	char *in1;	/* optional element of type xsd:string */
	char *in2;	/* optional element of type xsd:string */
	char *in3;	/* optional element of type xsd:string */
	char *in4;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_stringWithAttr
#define SOAP_TYPE_stringWithAttr (92)
/* Primitive stringWithAttr schema type: */
struct stringWithAttr
{
	char *__item;
	char *Type;	/* optional attribute of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_UsernameToken
#define SOAP_TYPE_UsernameToken (93)
/* UsernameToken */
struct UsernameToken
{
	char *wsse__Username;	/* optional element of type xsd:string */
	struct stringWithAttr wsse__Password;	/* required element of type stringWithAttr */
	char *wsse__Nonce;	/* optional element of type xsd:string */
	char *wsu__Created;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_Security
#define SOAP_TYPE_Security (94)
/* Security */
struct Security
{
	struct UsernameToken wsse__UsernameToken;	/* required element of type UsernameToken */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (95)
/* SOAP Header: */
struct SOAP_ENV__Header
{
	char *wsa__To;	/* optional element of type xsd:string */
	struct Security wsse__Security;	/* required element of type Security */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (96)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (98)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (99)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (100)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (7)
typedef char *xsd__string;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (8)
typedef int xsd__int;
#endif

#ifndef SOAP_TYPE_XML
#define SOAP_TYPE_XML (9)
typedef char *XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __wsrp__GetResourceProperty(struct soap*, char *wsrp__GetResourceProperty, char **out_);

SOAP_FMAC5 int SOAP_FMAC6 wsrp__GetMultipleResourceProperties(struct soap*, struct wsrp__GetMultipleResourcePropertiesRequest in, char **_out);

SOAP_FMAC5 int SOAP_FMAC6 wsrp__SetResourceProperties(struct soap*, char *wsrp__Insert, struct wsrp__SetResourcePropertiesResponse *_out);

SOAP_FMAC5 int SOAP_FMAC6 wsrp__GetResourcePropertyDocument(struct soap*, void *_, char **out_);

SOAP_FMAC5 int SOAP_FMAC6 sws__AddChild(struct soap*, struct sws__AddChildRequest __in, struct sws__AddChildResponse *out_);

SOAP_FMAC5 int SOAP_FMAC6 sws__Attach(struct soap*, void *_, struct sws__AttachResponse *out_);

SOAP_FMAC5 int SOAP_FMAC6 sws__Detach(struct soap*, void *_param_1, struct sws__DetachResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 sws__RecordCheckpoint(struct soap*, char *in0, char *in1, struct sws__RecordCheckpointResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 sws__GetParamLog(struct soap*, int in0, struct sws__GetParamLogResponse *out_);

SOAP_FMAC5 int SOAP_FMAC6 sws__PutParamLog(struct soap*, char *in0, struct sws__PutParamLogResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 wsrp__Destroy(struct soap*, void *_, struct wsrp__DestroyResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 swsf__createSWSResource(struct soap*, int timeToLive, char *chkpointEPR, char *passPhrase, struct swsf__createSWSResourceResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 rsg__Add(struct soap*, char *_in, struct rsg__AddResponse *_out);

SOAP_FMAC5 int SOAP_FMAC6 cpt__createNewTree(struct soap*, char *in0, struct cpt__createNewTreeResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 cpt__findByHandle(struct soap*, char *in0, char *in1, struct cpt__findByHandleResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 cpt__Destroy(struct soap*, void *_, struct cpt__destroyResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 cpt__getActiveTrees(struct soap*, void *_, struct cpt__getActiveTreesResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 cptn__Destroy(struct soap*, void *_, struct cptn__destroyResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 cptn__addNode(struct soap*, char *in0, char *in1, char *in2, char *in3, char *in4, struct cptn__addNodeResponse *out);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___wsrp__GetResourceProperty(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *wsrp__GetResourceProperty, char **out_);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_wsrp__GetMultipleResourceProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsrp__GetMultipleResourcePropertiesRequest in, char **_out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_wsrp__SetResourceProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *wsrp__Insert, struct wsrp__SetResourcePropertiesResponse *_out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_wsrp__GetResourcePropertyDocument(struct soap *soap, const char *soap_endpoint, const char *soap_action, void *_, char **out_);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_sws__AddChild(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct sws__AddChildRequest __in, struct sws__AddChildResponse *out_);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_sws__Attach(struct soap *soap, const char *soap_endpoint, const char *soap_action, void *_, struct sws__AttachResponse *out_);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_sws__Detach(struct soap *soap, const char *soap_endpoint, const char *soap_action, void *_param_1, struct sws__DetachResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_sws__RecordCheckpoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in0, char *in1, struct sws__RecordCheckpointResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_sws__GetParamLog(struct soap *soap, const char *soap_endpoint, const char *soap_action, int in0, struct sws__GetParamLogResponse *out_);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_sws__PutParamLog(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in0, struct sws__PutParamLogResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_wsrp__Destroy(struct soap *soap, const char *soap_endpoint, const char *soap_action, void *_, struct wsrp__DestroyResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_swsf__createSWSResource(struct soap *soap, const char *soap_endpoint, const char *soap_action, int timeToLive, char *chkpointEPR, char *passPhrase, struct swsf__createSWSResourceResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_rsg__Add(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in, struct rsg__AddResponse *_out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cpt__createNewTree(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in0, struct cpt__createNewTreeResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cpt__findByHandle(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in0, char *in1, struct cpt__findByHandleResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cpt__Destroy(struct soap *soap, const char *soap_endpoint, const char *soap_action, void *_, struct cpt__destroyResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cpt__getActiveTrees(struct soap *soap, const char *soap_endpoint, const char *soap_action, void *_, struct cpt__getActiveTreesResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cptn__Destroy(struct soap *soap, const char *soap_endpoint, const char *soap_action, void *_, struct cptn__destroyResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cptn__addNode(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in0, char *in1, char *in2, char *in3, char *in4, struct cptn__addNodeResponse *out);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___wsrp__GetResourceProperty(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_wsrp__GetMultipleResourceProperties(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_wsrp__SetResourceProperties(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_wsrp__GetResourcePropertyDocument(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_sws__AddChild(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_sws__Attach(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_sws__Detach(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_sws__RecordCheckpoint(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_sws__GetParamLog(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_sws__PutParamLog(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_wsrp__Destroy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_swsf__createSWSResource(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_rsg__Add(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cpt__createNewTree(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cpt__findByHandle(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cpt__Destroy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cpt__getActiveTrees(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cptn__Destroy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cptn__addNode(struct soap*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
