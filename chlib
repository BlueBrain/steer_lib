#!/bin/bash
#  Script to setup which incarnation of the RealityGrid Steering
#   Library is used when using shared libs (*.so).
#
#  (C) Copyright 2002, 2004, University of Manchester, United Kingdom,
#  all rights reserved.
#
#  This software is produced by the Supercomputing, Visualization and
#  e-Science Group, Manchester Computing, University of Manchester
#  as part of the RealityGrid project (http://www.realitygrid.org),
#  funded by the EPSRC under grants GR/R67699/01 and GR/R67699/02.
#
#  LICENCE TERMS
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS MATERIAL IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. THE ENTIRE RISK AS TO THE QUALITY
#  AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE
#  DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR
#  CORRECTION.
#
#  Authors........: Andrew Porter, Robert Haines
#---------------------------------------------------------------------

STATUS=0

. ./reg_steer_configure.sh

echo "********************************************************"
echo "*                                                      *"
echo "*                  RealityGrid chlib                   *"
echo "*          Change the default version of the           *"
echo "*             RealityGrid Steering Library             *"
echo "*                                                      *"
echo "********************************************************"

#
# Ask user whether they require Soap or file-based steering.
# Default: Soap
#

echo -e "\nHow would you like steering communications to be handled?"
echo -e " 0 SOAP\n 1 File"
echo -n "[0]: "
read STEER

if [ -z "$STEER" ]; then
    STEERNAME="Soap"
elif [ $STEER = "0" ]; then
    STEERNAME="Soap"
else
    STEERNAME="File"
fi

#
# Ask user whether they want socket or file based IO.
# Default: Sockets
#

echo -e "\nHow would you like data to be transfered?"
echo -e " 0 Sockets\n 1 File"
echo -n "[0]: "
read IO

if [ -z "$IO" ]; then
    IONAME="Sockets"
elif [ $IO = "0" ]; then
    IONAME="Sockets"
else
    IONAME="File"
fi

#
# Ask user whether they want to enable debugging or not.
# Default: Off
#

echo -e "\nWould you like to enable debuging?"
echo -e " 0 No\n 1 Yes"
echo -n "[0]: "
read DEBUG

if [ -z "$DEBUG" ]; then
    DEBUG="0"
    DEBUGNAME=""
elif [ $DEBUG = "0" ]; then
    DEBUGNAME=""
else
    DEBUGNAME="Debug"
fi

#
# Summarise user input
#

echo -e "\nSetting up the RealityGrid Steering Library \c"
echo "with the following options:"
echo -e " * Steering:\t$STEERNAME"
echo -e " * IO:\t\t$IONAME"
echo -e " * Debugging:\t\c"

if [ $DEBUG = "1" ]; then
    echo "On"
else
    echo "Off"
fi

#
# If both steering and io are set to File then remove one
# reference to File...
#

if [ $IONAME = $STEERNAME ]; then
    IONAME=""
fi

#
# Setup lib and link names
#

LINKNAME=libReG_Steer.so
LIBNAME=libReG_Steer$STEERNAME$IONAME$DEBUGNAME.so

#
# Do lib32 stuff
#

LIB32=0
if [ -e $REG_STEER_HOME/lib32/$LIBNAME ]; then
    LIB32=1
    echo -e "\nCreating link in lib32 directory"
    rm -f $REG_STEER_HOME/lib32/$LINKNAME
    ln -s $LIBNAME $REG_STEER_HOME/lib32/$LINKNAME
fi

#
# Do lib64 stuff
#

LIB64=0
if [ -e $REG_STEER_HOME/lib64/$LIBNAME ]; then
    LIB64=1
    echo -e "\nCreating link in lib64 directory"
    rm -f $REG_STEER_HOME/lib64/$LINKNAME
    ln -s $LIBNAME $REG_STEER_HOME/lib64/$LINKNAME
fi

#
# Summarise and exit
#

if [ $LIB64 = "0" ] && [ $LIB32 = "0" ]; then
    echo -e "\nchlib could not find the required libraries in either \c"
    echo "of the standard directories:"
    echo -e " $REG_STEER_HOME/lib64/ \n $REG_STEER_HOME/lib32/"
    echo -e "\nPlease ensure that you have compiled the libraries and that"
    echo "\$REG_STEER_HOME is set correctly.\n"
    STATUS=1
else
    echo -e "\nYou may now simply re-run your code to use the new version \c"
    echo -e "of the RealityGrid\nSteering Library. No relinking required!\n"
fi

exit $((STATUS))
